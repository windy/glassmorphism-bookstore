class AdminConstraint
  def matches?(request)
    return false unless request.session[:current_admin_id].present?

    admin = Administrator.find_by(id: request.session[:current_admin_id])
    admin.present?
  end
end

Rails.application.routes.draw do
  get "home/index"
  resource :cart, only: [:show]
  resources :cart_items, only: [:create, :destroy]
  resources :books, only: [:index, :show]
  resources :orders, only: [:index, :show, :create] do
    member do
      get :pay
      post :pay
      get :success
      get :failure
    end
  end
  post '/webhooks/stripe', to: 'orders#webhook'
  # Authentication routes generated by authentication generator
  get  "sign_in", to: "sessions#new"
  post "sign_in", to: "sessions#create"
  delete 'sign_out', to: 'sessions#destroy', as: :sign_out
  get  "sign_up", to: "registrations#new"
  post "sign_up", to: "registrations#create"
  resource :session, only: [:new, :show, :destroy] do
    get :devices, on: :member
    delete :destroy_one, on: :member
  end
  resources :registrations, only: [:new, :create]
  resource  :password, only: [:edit, :update]

  namespace :identity do
    resource :email,              only: [:edit, :update]
    resource :email_verification, only: [:show, :create]
    resource :password_reset,     only: [:new, :edit, :create, :update]
  end

  get  "/auth/failure",            to: "sessions/omniauth#failure"
  get  "/auth/:provider/callback", to: "sessions/omniauth#create"
  post "/auth/:provider/callback", to: "sessions/omniauth#create"

  resource :invitation, only: [:new, :create]

  # Profile routes
  resource :profile, only: [:show, :edit, :update], controller: 'profiles' do
    member do
      get :edit_password
      patch :update_password
    end
  end

  # API routes for curl-friendly authentication
  namespace :api do
    namespace :v1 do
      post 'login', to: 'sessions#login'
      delete 'logout', to: 'sessions#destroy'
    end
  end

  # Authentication routes generated end

  resources :posts
  resources :posts, only: [:index, :show, :create]
  # Do not write business logic at admin dashboard
  namespace :admin do
    resources :books
    resources :orders
    resources :administrators
    get 'login', to: 'sessions#new', as: :login
    post 'login', to: 'sessions#create'
    delete 'logout', to: 'sessions#destroy', as: :logout
    resource :account, only: [:edit, :update]

    # Mount GoodJob dashboard
    mount GoodJob::Engine => 'good_job', :constraints => AdminConstraint.new

    root to: 'dashboard#index'
  end

  # write your routes here
  root 'home#index'

  mount ActionCable.server => '/cable'
end
